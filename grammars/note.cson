# TextMate tutorial: http://manual.macromates.com/en/language_grammars

# Regex to convert keys to unquoted: '(include|'match'|'captures'|begin|end|begin'captures'|end'captures'|'name'|patterns|0|'1'|'2'|3|4|5|6|7|8|9|comment|fileTypes|scope'name'|repository|content'name'|firstLine'match'|foldingStartMarker|foldingStopMarker)':

'scopeName': 'source.note' # <scope> should be a short, unique indicator for the language ("js", "php", "c", etc.)
'name': 'Daily_Notes' # The title that will show up in grammar selection and on your status bar.
'fileTypes': [ # An array of file extensions.
  'note'
]

'patterns': [ # An array of individual pattern declarations.
  {
    'match': '^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$'
    'name': 'url.item'
    'captures':
      '1': 'name': 'url.note'
  },
  {
    'match': '^([0-9/]*)\:(.*)\n'
    'name': 'meeting_date.item'
    'captures':
      '1': 'name': 'meeting_date.note'
  },
  {
    'match': '(Attendees)'
    'name': 'attendees.note'
    'captures':
      '1': 'name': 'attendees.note'
  },
  {
    'match': '(CC)'
    'name': 'cc.note'
    'captures':
      '1': 'name': 'cc.note'
  },
  {
    'match': '(Meeting Notes)'
    'name': 'meeting_notes.note'
    'captures':
      '1': 'name': 'meeting_notes.note'
  },
  {
    'match': '(Discussed)'
    'name': 'discussed.note'
    'captures':
      '1': 'name': 'discussed.note'
  },
  {
    'match': '(DUE)\\s*([^a-z]*)\n'
    'name': 'due.item'
    'captures':
      '1': 'name': 'due_key.note'
      '2': 'name': 'due_date_value.note'
  },
  {
    'match': '(Sumit DUE)\\s*([^a-z]*)\n'
    'name': 'sumit_due.item'
    'captures':
      '1': 'name': 'sumit_due_key.note'
      '2': 'name': 'sumit_due_date_value.note'
  },
  {
    'match': '(Done)-([^\a-z\n\)]*)'
    'name': 'done.item'
    'captures':
      '1': 'name': 'done_key.note'
      '2': 'name': 'done_date_value.note'
  },
  {
    'match': '(DATE):\\s*([^\\n]*)'
    'name': 'date.note'
    'captures':
      '1': 'name': 'section_key.note'
      '2': 'name': 'date_value.note'
  },
  {
    'match': '(HOURS):\\s*([^\\n]*)'
    'name': 'hours.note'
    'captures':
      '1': 'name': 'section_key.note'
      '2': 'name': 'hours_value.note'
  },
  {
    'match': '(INCIDENT):\\s*([^\\n]*)'
    'name': 'incident.note'
    'captures':
      '1': 'name': 'section_key.note'
      '2': 'name': 'incident_value.note'
  },
  {
    'match': '(INFO):\\s*([^\\n]*)'
    'name': 'info.note'
    'captures':
      '1': 'name': 'section_key.note'
      '2': 'name': 'info_value.note'
  },
  {
    'match': '(Action Items)'
    'name': 'action_items.note'
    'captures':
      '1': 'name': 'action_items.note'
  },
  {
    'match': '(TAGS):\\s*([^\\n]*)'
    'name': 'tags.note'
    'captures':
      '1': 'name': 'section_key.note'
      '2': 'name': 'tags_value.note'
  },
  {
    'match': '(TASK):\\s*([^\\n]*)'
    'name': 'task.note'
    'captures':
      '1': 'name': 'section_key.note'
      '2': 'name': 'task_value.note'
  },
  {
    'match': '(TODO):\\s*([^\\n]*)'
    'name': 'todo.note'
    'captures':
      '1': 'name': 'section_key.note'
      '2': 'name': 'todo_value.note'
  },
  {
    'match': '(CHECK):\\s*(.*)\\s+((INCOMPLETE)|(COMPLETE))$'
    'name': 'check.note'
    'captures':
      '1': 'name': 'checklist_value.note'
      '2': 'name': 'checklist_value.note'
      '4': 'name': 'checklist_incomplete.note'
      '5': 'name': 'checklist_complete.note'
  }
]
